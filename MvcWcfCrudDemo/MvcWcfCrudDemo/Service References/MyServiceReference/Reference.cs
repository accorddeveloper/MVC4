//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcWcfCrudDemo.MyServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/CustomerWcfService")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyServiceReference.ICustomer")]
    public interface ICustomer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/Save", ReplyAction="http://tempuri.org/ICustomer/SaveResponse")]
        void Save(MvcWcfCrudDemo.MyServiceReference.Customer obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/Save", ReplyAction="http://tempuri.org/ICustomer/SaveResponse")]
        System.Threading.Tasks.Task SaveAsync(MvcWcfCrudDemo.MyServiceReference.Customer obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/Delete", ReplyAction="http://tempuri.org/ICustomer/DeleteResponse")]
        void Delete(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/Delete", ReplyAction="http://tempuri.org/ICustomer/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/GetCustomer", ReplyAction="http://tempuri.org/ICustomer/GetCustomerResponse")]
        MvcWcfCrudDemo.MyServiceReference.Customer[] GetCustomer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/GetCustomer", ReplyAction="http://tempuri.org/ICustomer/GetCustomerResponse")]
        System.Threading.Tasks.Task<MvcWcfCrudDemo.MyServiceReference.Customer[]> GetCustomerAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerChannel : MvcWcfCrudDemo.MyServiceReference.ICustomer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerClient : System.ServiceModel.ClientBase<MvcWcfCrudDemo.MyServiceReference.ICustomer>, MvcWcfCrudDemo.MyServiceReference.ICustomer {
        
        public CustomerClient() {
        }
        
        public CustomerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Save(MvcWcfCrudDemo.MyServiceReference.Customer obj) {
            base.Channel.Save(obj);
        }
        
        public System.Threading.Tasks.Task SaveAsync(MvcWcfCrudDemo.MyServiceReference.Customer obj) {
            return base.Channel.SaveAsync(obj);
        }
        
        public void Delete(string Id) {
            base.Channel.Delete(Id);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(string Id) {
            return base.Channel.DeleteAsync(Id);
        }
        
        public MvcWcfCrudDemo.MyServiceReference.Customer[] GetCustomer() {
            return base.Channel.GetCustomer();
        }
        
        public System.Threading.Tasks.Task<MvcWcfCrudDemo.MyServiceReference.Customer[]> GetCustomerAsync() {
            return base.Channel.GetCustomerAsync();
        }
    }
}
